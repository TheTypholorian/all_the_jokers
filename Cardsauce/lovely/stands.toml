[manifest]
version = "1.0.0"
dump_lua = true
priority = 9999999

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.set == 'Joker' and not self.sticker_run then'''
position = "before"
payload = '''
if self.ability.set == 'csau_Stand' and not self.sticker_run then
    self.sticker_run = get_stand_win_sticker(self.config.center) or 'NONE'
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "set_joker_win()"
position = "after"
payload = "set_stand_win()"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''local rows, protos = {}, {'collection', 'challenges', 'joker_stickers', 'deck_stake_wins'}
_profile_progress = _profile_progress or G.PROFILES[G.SETTINGS.profile].progress'''
position = "at"
payload = '''local rows, protos = {}, {'collection', 'challenges', 'joker_stickers', 'stand_stickers', 'deck_stake_wins'}
_profile_progress = _profile_progress or G.PROFILES[G.SETTINGS.profile].progress
if not _profile_progress.stand_stickers then
    local of = 0; for _, v in pairs(G.P_CENTERS) do if v.set == 'csau_Stand' then of = of + 1 end end
    _profile_progress.stand_stickers = {tally = 0, of = of*#G.P_CENTER_POOLS.Stake }
end'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "_profile_progress.joker_stickers.tally/_profile_progress.joker_stickers.of +"
position = "after"
payload = '''_profile_progress.stand_stickers.tally/_profile_progress.stand_stickers.of +'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''  4

  local text_scale = smaller and 0.7 or 1'''
position = "at"
payload = '''  5

  local text_scale = smaller and 0.7 or 1'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "elseif v == 'joker_stickers' then"
position = "before"
payload = '''elseif v == 'stand_stickers' then
    tab, val, max = _profile_progress.stand_stickers, 'tally', _profile_progress.stand_stickers.of'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''{n=G.UIT.T, config={text = " (".._profile_progress.challenges.tally..'/'.._profile_progress.challenges.of..")", scale = 0.35, colour = G.C.JOKER_GREY}}
    }'''
position = "after"
payload = '''or v == 'stand_stickers' and {
      {n=G.UIT.O, config={object = DynaText({string = {math.floor(0.01+100*_profile_progress.stand_stickers.tally/_profile_progress.stand_stickers.of)..'%'}, colours = {G.C.WHITE},shadow = true, float = true, scale = 0.55*text_scale})}},
      {n=G.UIT.T, config={text = " (".._profile_progress.stand_stickers.tally..'/'.._profile_progress.stand_stickers.of..")", scale = 0.35, colour = G.C.JOKER_GREY}}
    }'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if specific_vars and specific_vars.sticker then info_queue[#info_queue+1] = {key = string.lower(specific_vars.sticker)..'_sticker', set = 'Other'} end"
position = "at"
payload = '''if specific_vars and specific_vars.sticker and type(specific_vars.sticker) ~= 'number' then
    info_queue[#info_queue+1] = {key = string.lower(specific_vars.sticker)..'_sticker', set = 'Other', vars = { localize('k_'..string.lower(_c.set)) or localize('k_joker') }}
end'''
match_indent = true
times = 2

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "card.ability.consumeable then --Add a use button"
position = "at"
payload = "card.ability.consumeable and card.ability.set ~= 'csau_Stand' then --Add a use button"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "local id = self:get_id()"
position = "at"
payload = "local id = self:get_id(true)"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "local last_tarot_planet = fool_c and localize{type = 'name_text', key = fool_c.key, set = fool_c.set} or localize('k_none')"
position = "at"
payload = '''
local last_tarot_planet = localize('k_none')
if fool_c == 'c_csau_arrow' then
    last_tarot_planet = fool_c and localize{type = 'name_text', key = fool_c.key, set = fool_c.set, vars = { G.GAME.modifiers.max_stands or 1, (card.area.config.collection and localize('k_stand')) or (G.GAME.modifiers.max_stands > 1 and localize('b_stand_cards') or localize('k_stand')) }} or localize('k_none')
else
    last_tarot_planet = fool_c and localize{type = 'name_text', key = fool_c.key, set = fool_c.set} or localize('k_none')
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''G.E_MANAGER:add_event(Event({
    func = function()
        if cards_destroyed[i].shattered then
            cards_destroyed[i]:shatter()
        else
            cards_destroyed[i]:start_dissolve()
        end
        return true
    end
}))'''
position = "after"
payload = '''SMODS.calculate_context({csau_card_destroyed = true, removed = cards_destroyed[i] })'''
match_indent = true
times = 1