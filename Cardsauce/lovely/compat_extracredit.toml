[manifest]
version = "1.0.0"
dump_lua = true
priority = 9999999

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = '''if not context.blueprint then
                card.ability.extra.uses = card.ability.extra.uses - 1'''
position = "at"
payload = '''if SMODS.food_expires() and not context.blueprint then
                card.ability.extra.uses = card.ability.extra.uses - 1'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = '''if not context.blueprint then
                card.ability.extra.candies = card.ability.extra.candies - 1'''
position = "at"
payload = '''if SMODS.food_expires() and not context.blueprint then
                card.ability.extra.candies = card.ability.extra.candies - 1'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = '''card_eval_status_text(card, 'extra', nil, nil, nil, {
                        message = localize('k_eaten_ex'),
                            colour = G.C.PURPLE,
                        card = card
                    })
                end'''
position = "after"
payload = '''else
    card:juice_up()'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = '''if not G.jokers.cards[i].ability.eternal and not G.jokers.cards[i].getting_sliced then destructable_jokers[#destructable_jokers+1] = G.jokers.cards[i] end'''
position = "at"
payload = '''
local prevent_self = false
if G.jokers.cards[i] == card then
    if not SMODS.food_expires() then
        prevent_self = true
    end
end
if not G.jokers.cards[i].ability.eternal and not G.jokers.cards[i].getting_sliced and not prevent_self then destructable_jokers[#destructable_jokers+1] = G.jokers.cards[i] end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = '''if card.ability.extra.mult >= 30 then'''
position = "at"
payload = '''if card.ability.extra.mult >= 30 and SMODS.food_expires() then'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = "if context.card.ability.set == 'Spectral' then"
position = "at"
payload = "if SMODS.food_expires() and context.card.ability.set == 'Spectral' then"
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = "elseif context.end_of_round and not context.individual and not context.repetition and not context.blueprint then"
position = "at"
payload = "elseif context.end_of_round and not context.individual and not context.repetition and not context.blueprint and SMODS.food_expires() then"
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = '''G.E_MANAGER:add_event(Event({
                func = function()
                    card_eval_status_text(card, 'extra', nil, nil, nil, {
                        message = localize('k_drank_ex'),
                            colour = G.C.MONEY,
                        card = card
                    })
                    return true
                end}))
            ease_dollars(card.ability.extra.money)
            card:juice_up(0.5, 0.5)
            delay(0.5)
            G.E_MANAGER:add_event(Event({
                func = function()
                    play_sound('tarot1')
                    card.T.r = -0.2
                    card:juice_up(0.3, 0.4)
                    card.states.drag.is = true
                    card.children.center.pinch.x = true
                    G.E_MANAGER:add_event(Event({trigger = 'after', delay = 0.3, blockable = false,
                        func = function()
                                G.jokers:remove_card(self)
                                card:remove()
                                card = nil
                            return true; end}))
                    return true
                end
            }))
'''
position = "before"
payload = "if SMODS.food_expires() then"
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS extracredit "src/essay.lua"]'''
pattern = '''G.E_MANAGER:add_event(Event({
                func = function()
                    card_eval_status_text(card, 'extra', nil, nil, nil, {
                        message = localize('k_drank_ex'),
                            colour = G.C.MONEY,
                        card = card
                    })
                    return true
                end}))
            ease_dollars(card.ability.extra.money)
            card:juice_up(0.5, 0.5)
            delay(0.5)
            G.E_MANAGER:add_event(Event({
                func = function()
                    play_sound('tarot1')
                    card.T.r = -0.2
                    card:juice_up(0.3, 0.4)
                    card.states.drag.is = true
                    card.children.center.pinch.x = true
                    G.E_MANAGER:add_event(Event({trigger = 'after', delay = 0.3, blockable = false,
                        func = function()
                                G.jokers:remove_card(self)
                                card:remove()
                                card = nil
                            return true; end}))
                    return true
                end
            }))
'''
position = "after"
payload = '''else
return {
    dollars = card.ability.extra.money
}
end
'''
match_indent = true